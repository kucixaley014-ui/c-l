name: Flutter APK Build

on:
  workflow_dispatch:  # Можно запускать вручную
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: "stable"

    - name: Create Flutter project
      run: |
        flutter create audio_recorder_app
        cd audio_recorder_app
        # добавляем необходимые зависимости
        echo 'dependencies:
  flutter:
    sdk: flutter
  path_provider: ^2.0.14
  permission_handler: ^10.4.1
  flutter_sound: ^9.3.2' >> pubspec.yaml
        flutter pub get

    - name: Add main.dart
      run: |
        cd audio_recorder_app/lib
        cat > main.dart <<'EOF'
        import 'package:flutter/material.dart';
        import 'package:flutter_sound/flutter_sound.dart';
        import 'package:permission_handler/permission_handler.dart';
        import 'package:path_provider/path_provider.dart';
        import 'dart:io';

        void main() => runApp(MyApp());

        class MyApp extends StatelessWidget {
          @override
          Widget build(BuildContext context) {
            return MaterialApp(
              home: RecorderPage(),
            );
          }
        }

        class RecorderPage extends StatefulWidget {
          @override
          _RecorderPageState createState() => _RecorderPageState();
        }

        class _RecorderPageState extends State<RecorderPage> {
          final FlutterSoundRecorder _recorder = FlutterSoundRecorder();
          final FlutterSoundPlayer _player = FlutterSoundPlayer();
          bool _isRecording = false;
          bool _isPlaying = false;
          String? _filePath;

          @override
          void initState() {
            super.initState();
            _init();
          }

          Future<void> _init() async {
            await _recorder.openRecorder();
            await _player.openPlayer();
            _filePath = '${(await getTemporaryDirectory()).path}/audio.aac';
          }

          Future<void> _startRecording() async {
            if (await Permission.microphone.request().isGranted) {
              await _recorder.startRecorder(toFile: _filePath);
              setState(() => _isRecording = true);
            }
          }

          Future<void> _stopRecording() async {
            await _recorder.stopRecorder();
            setState(() => _isRecording = false);
          }

          Future<void> _playAudio() async {
            await _player.startPlayer(fromURI: _filePath, whenFinished: () {
              setState(() => _isPlaying = false);
            });
            setState(() => _isPlaying = true);
          }

          Future<void> _stopAudio() async {
            await _player.stopPlayer();
            setState(() => _isPlaying = false);
          }

          @override
          void dispose() {
            _recorder.closeRecorder();
            _player.closePlayer();
            super.dispose();
          }

          @override
          Widget build(BuildContext context) {
            return Scaffold(
              appBar: AppBar(title: Text("Audio Recorder")),
              body: Center(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    ElevatedButton(
                      onPressed: _isRecording ? _stopRecording : _startRecording,
                      child: Text(_isRecording ? "Stop Recording" : "Start Recording"),
                    ),
                    SizedBox(height: 20),
                    ElevatedButton(
                      onPressed: _isPlaying ? _stopAudio : _playAudio,
                      child: Text(_isPlaying ? "Stop Playing" : "Play Audio"),
                    ),
                  ],
                ),
              ),
            );
          }
        }
        EOF

    - name: Build APK
      run: |
        cd audio_recorder_app
        flutter build apk --release

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-release.apk
        path: audio_recorder_app/build/app/outputs/flutter-apk/app-release.apk
